/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/queue@6.0.2";
exports.ids = ["vendor-chunks/queue@6.0.2"];
exports.modules = {

/***/ "(rsc)/../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var inherits = __webpack_require__(/*! inherits */ \"(rsc)/../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js\")\nvar EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter)\n\nmodule.exports = Queue\nmodule.exports[\"default\"] = Queue\n\nfunction Queue (options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options)\n  }\n\n  EventEmitter.call(this)\n  options = options || {}\n  this.concurrency = options.concurrency || Infinity\n  this.timeout = options.timeout || 0\n  this.autostart = options.autostart || false\n  this.results = options.results || null\n  this.pending = 0\n  this.session = 0\n  this.running = false\n  this.jobs = []\n  this.timers = {}\n}\ninherits(Queue, EventEmitter)\n\nvar arrayMethods = [\n  'pop',\n  'shift',\n  'indexOf',\n  'lastIndexOf'\n]\n\narrayMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    return Array.prototype[method].apply(this.jobs, arguments)\n  }\n})\n\nQueue.prototype.slice = function (begin, end) {\n  this.jobs = this.jobs.slice(begin, end)\n  return this\n}\n\nQueue.prototype.reverse = function () {\n  this.jobs.reverse()\n  return this\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n]\n\narrayAddMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments)\n    if (this.autostart) {\n      this.start()\n    }\n    return methodResult\n  }\n})\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function () {\n    return this.pending + this.jobs.length\n  }\n})\n\nQueue.prototype.start = function (cb) {\n  if (cb) {\n    callOnErrorOrEnd.call(this, cb)\n  }\n\n  this.running = true\n\n  if (this.pending >= this.concurrency) {\n    return\n  }\n\n  if (this.jobs.length === 0) {\n    if (this.pending === 0) {\n      done.call(this)\n    }\n    return\n  }\n\n  var self = this\n  var job = this.jobs.shift()\n  var once = true\n  var session = this.session\n  var timeoutId = null\n  var didTimeout = false\n  var resultIndex = null\n  var timeout = job.hasOwnProperty('timeout') ? job.timeout : this.timeout\n\n  function next (err, result) {\n    if (once && self.session === session) {\n      once = false\n      self.pending--\n      if (timeoutId !== null) {\n        delete self.timers[timeoutId]\n        clearTimeout(timeoutId)\n      }\n\n      if (err) {\n        self.emit('error', err, job)\n      } else if (didTimeout === false) {\n        if (resultIndex !== null) {\n          self.results[resultIndex] = Array.prototype.slice.call(arguments, 1)\n        }\n        self.emit('success', result, job)\n      }\n\n      if (self.session === session) {\n        if (self.pending === 0 && self.jobs.length === 0) {\n          done.call(self)\n        } else if (self.running) {\n          self.start()\n        }\n      }\n    }\n  }\n\n  if (timeout) {\n    timeoutId = setTimeout(function () {\n      didTimeout = true\n      if (self.listeners('timeout').length > 0) {\n        self.emit('timeout', next, job)\n      } else {\n        next()\n      }\n    }, timeout)\n    this.timers[timeoutId] = timeoutId\n  }\n\n  if (this.results) {\n    resultIndex = this.results.length\n    this.results[resultIndex] = null\n  }\n\n  this.pending++\n  self.emit('start', job)\n  var promise = job(next)\n  if (promise && promise.then && typeof promise.then === 'function') {\n    promise.then(function (result) {\n      return next(null, result)\n    }).catch(function (err) {\n      return next(err || true)\n    })\n  }\n\n  if (this.running && this.jobs.length > 0) {\n    this.start()\n  }\n}\n\nQueue.prototype.stop = function () {\n  this.running = false\n}\n\nQueue.prototype.end = function (err) {\n  clearTimers.call(this)\n  this.jobs.length = 0\n  this.pending = 0\n  done.call(this, err)\n}\n\nfunction clearTimers () {\n  for (var key in this.timers) {\n    var timeoutId = this.timers[key]\n    delete this.timers[key]\n    clearTimeout(timeoutId)\n  }\n}\n\nfunction callOnErrorOrEnd (cb) {\n  var self = this\n  this.on('error', onerror)\n  this.on('end', onend)\n\n  function onerror (err) { self.end(err) }\n  function onend (err) {\n    self.removeListener('error', onerror)\n    self.removeListener('end', onend)\n    cb(err, this.results)\n  }\n}\n\nfunction done (err) {\n  this.session++\n  this.running = false\n  this.emit('end', err)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3F1ZXVlQDYuMC4yL25vZGVfbW9kdWxlcy9xdWV1ZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsOEZBQVU7QUFDakMsbUJBQW1CLDBEQUE4Qjs7QUFFakQ7QUFDQSx5QkFBc0I7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvcGF1bC9wcm9qZWN0cy9wYXlsb2FkL3BsdWdpbi1kZXZlbG9wbWVudC9iZXR0ZXItZmllbGRzL2dpdHJvb3Qvbm9kZV9tb2R1bGVzLy5wbnBtL3F1ZXVlQDYuMC4yL25vZGVfbW9kdWxlcy9xdWV1ZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG5cbm1vZHVsZS5leHBvcnRzID0gUXVldWVcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBRdWV1ZVxuXG5mdW5jdGlvbiBRdWV1ZSAob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUXVldWUpKSB7XG4gICAgcmV0dXJuIG5ldyBRdWV1ZShvcHRpb25zKVxuICB9XG5cbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcylcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cbiAgdGhpcy5jb25jdXJyZW5jeSA9IG9wdGlvbnMuY29uY3VycmVuY3kgfHwgSW5maW5pdHlcbiAgdGhpcy50aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0IHx8IDBcbiAgdGhpcy5hdXRvc3RhcnQgPSBvcHRpb25zLmF1dG9zdGFydCB8fCBmYWxzZVxuICB0aGlzLnJlc3VsdHMgPSBvcHRpb25zLnJlc3VsdHMgfHwgbnVsbFxuICB0aGlzLnBlbmRpbmcgPSAwXG4gIHRoaXMuc2Vzc2lvbiA9IDBcbiAgdGhpcy5ydW5uaW5nID0gZmFsc2VcbiAgdGhpcy5qb2JzID0gW11cbiAgdGhpcy50aW1lcnMgPSB7fVxufVxuaW5oZXJpdHMoUXVldWUsIEV2ZW50RW1pdHRlcilcblxudmFyIGFycmF5TWV0aG9kcyA9IFtcbiAgJ3BvcCcsXG4gICdzaGlmdCcsXG4gICdpbmRleE9mJyxcbiAgJ2xhc3RJbmRleE9mJ1xuXVxuXG5hcnJheU1ldGhvZHMuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gIFF1ZXVlLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGVbbWV0aG9kXS5hcHBseSh0aGlzLmpvYnMsIGFyZ3VtZW50cylcbiAgfVxufSlcblxuUXVldWUucHJvdG90eXBlLnNsaWNlID0gZnVuY3Rpb24gKGJlZ2luLCBlbmQpIHtcbiAgdGhpcy5qb2JzID0gdGhpcy5qb2JzLnNsaWNlKGJlZ2luLCBlbmQpXG4gIHJldHVybiB0aGlzXG59XG5cblF1ZXVlLnByb3RvdHlwZS5yZXZlcnNlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmpvYnMucmV2ZXJzZSgpXG4gIHJldHVybiB0aGlzXG59XG5cbnZhciBhcnJheUFkZE1ldGhvZHMgPSBbXG4gICdwdXNoJyxcbiAgJ3Vuc2hpZnQnLFxuICAnc3BsaWNlJ1xuXVxuXG5hcnJheUFkZE1ldGhvZHMuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gIFF1ZXVlLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBtZXRob2RSZXN1bHQgPSBBcnJheS5wcm90b3R5cGVbbWV0aG9kXS5hcHBseSh0aGlzLmpvYnMsIGFyZ3VtZW50cylcbiAgICBpZiAodGhpcy5hdXRvc3RhcnQpIHtcbiAgICAgIHRoaXMuc3RhcnQoKVxuICAgIH1cbiAgICByZXR1cm4gbWV0aG9kUmVzdWx0XG4gIH1cbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShRdWV1ZS5wcm90b3R5cGUsICdsZW5ndGgnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLnBlbmRpbmcgKyB0aGlzLmpvYnMubGVuZ3RoXG4gIH1cbn0pXG5cblF1ZXVlLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uIChjYikge1xuICBpZiAoY2IpIHtcbiAgICBjYWxsT25FcnJvck9yRW5kLmNhbGwodGhpcywgY2IpXG4gIH1cblxuICB0aGlzLnJ1bm5pbmcgPSB0cnVlXG5cbiAgaWYgKHRoaXMucGVuZGluZyA+PSB0aGlzLmNvbmN1cnJlbmN5KSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAodGhpcy5qb2JzLmxlbmd0aCA9PT0gMCkge1xuICAgIGlmICh0aGlzLnBlbmRpbmcgPT09IDApIHtcbiAgICAgIGRvbmUuY2FsbCh0aGlzKVxuICAgIH1cbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBzZWxmID0gdGhpc1xuICB2YXIgam9iID0gdGhpcy5qb2JzLnNoaWZ0KClcbiAgdmFyIG9uY2UgPSB0cnVlXG4gIHZhciBzZXNzaW9uID0gdGhpcy5zZXNzaW9uXG4gIHZhciB0aW1lb3V0SWQgPSBudWxsXG4gIHZhciBkaWRUaW1lb3V0ID0gZmFsc2VcbiAgdmFyIHJlc3VsdEluZGV4ID0gbnVsbFxuICB2YXIgdGltZW91dCA9IGpvYi5oYXNPd25Qcm9wZXJ0eSgndGltZW91dCcpID8gam9iLnRpbWVvdXQgOiB0aGlzLnRpbWVvdXRcblxuICBmdW5jdGlvbiBuZXh0IChlcnIsIHJlc3VsdCkge1xuICAgIGlmIChvbmNlICYmIHNlbGYuc2Vzc2lvbiA9PT0gc2Vzc2lvbikge1xuICAgICAgb25jZSA9IGZhbHNlXG4gICAgICBzZWxmLnBlbmRpbmctLVxuICAgICAgaWYgKHRpbWVvdXRJZCAhPT0gbnVsbCkge1xuICAgICAgICBkZWxldGUgc2VsZi50aW1lcnNbdGltZW91dElkXVxuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKVxuICAgICAgfVxuXG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIsIGpvYilcbiAgICAgIH0gZWxzZSBpZiAoZGlkVGltZW91dCA9PT0gZmFsc2UpIHtcbiAgICAgICAgaWYgKHJlc3VsdEluZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgc2VsZi5yZXN1bHRzW3Jlc3VsdEluZGV4XSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSlcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmVtaXQoJ3N1Y2Nlc3MnLCByZXN1bHQsIGpvYilcbiAgICAgIH1cblxuICAgICAgaWYgKHNlbGYuc2Vzc2lvbiA9PT0gc2Vzc2lvbikge1xuICAgICAgICBpZiAoc2VsZi5wZW5kaW5nID09PSAwICYmIHNlbGYuam9icy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBkb25lLmNhbGwoc2VsZilcbiAgICAgICAgfSBlbHNlIGlmIChzZWxmLnJ1bm5pbmcpIHtcbiAgICAgICAgICBzZWxmLnN0YXJ0KClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBkaWRUaW1lb3V0ID0gdHJ1ZVxuICAgICAgaWYgKHNlbGYubGlzdGVuZXJzKCd0aW1lb3V0JykubGVuZ3RoID4gMCkge1xuICAgICAgICBzZWxmLmVtaXQoJ3RpbWVvdXQnLCBuZXh0LCBqb2IpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0KClcbiAgICAgIH1cbiAgICB9LCB0aW1lb3V0KVxuICAgIHRoaXMudGltZXJzW3RpbWVvdXRJZF0gPSB0aW1lb3V0SWRcbiAgfVxuXG4gIGlmICh0aGlzLnJlc3VsdHMpIHtcbiAgICByZXN1bHRJbmRleCA9IHRoaXMucmVzdWx0cy5sZW5ndGhcbiAgICB0aGlzLnJlc3VsdHNbcmVzdWx0SW5kZXhdID0gbnVsbFxuICB9XG5cbiAgdGhpcy5wZW5kaW5nKytcbiAgc2VsZi5lbWl0KCdzdGFydCcsIGpvYilcbiAgdmFyIHByb21pc2UgPSBqb2IobmV4dClcbiAgaWYgKHByb21pc2UgJiYgcHJvbWlzZS50aGVuICYmIHR5cGVvZiBwcm9taXNlLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIG5leHQobnVsbCwgcmVzdWx0KVxuICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIHJldHVybiBuZXh0KGVyciB8fCB0cnVlKVxuICAgIH0pXG4gIH1cblxuICBpZiAodGhpcy5ydW5uaW5nICYmIHRoaXMuam9icy5sZW5ndGggPiAwKSB7XG4gICAgdGhpcy5zdGFydCgpXG4gIH1cbn1cblxuUXVldWUucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMucnVubmluZyA9IGZhbHNlXG59XG5cblF1ZXVlLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIGNsZWFyVGltZXJzLmNhbGwodGhpcylcbiAgdGhpcy5qb2JzLmxlbmd0aCA9IDBcbiAgdGhpcy5wZW5kaW5nID0gMFxuICBkb25lLmNhbGwodGhpcywgZXJyKVxufVxuXG5mdW5jdGlvbiBjbGVhclRpbWVycyAoKSB7XG4gIGZvciAodmFyIGtleSBpbiB0aGlzLnRpbWVycykge1xuICAgIHZhciB0aW1lb3V0SWQgPSB0aGlzLnRpbWVyc1trZXldXG4gICAgZGVsZXRlIHRoaXMudGltZXJzW2tleV1cbiAgICBjbGVhclRpbWVvdXQodGltZW91dElkKVxuICB9XG59XG5cbmZ1bmN0aW9uIGNhbGxPbkVycm9yT3JFbmQgKGNiKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICB0aGlzLm9uKCdlcnJvcicsIG9uZXJyb3IpXG4gIHRoaXMub24oJ2VuZCcsIG9uZW5kKVxuXG4gIGZ1bmN0aW9uIG9uZXJyb3IgKGVycikgeyBzZWxmLmVuZChlcnIpIH1cbiAgZnVuY3Rpb24gb25lbmQgKGVycikge1xuICAgIHNlbGYucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcilcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZClcbiAgICBjYihlcnIsIHRoaXMucmVzdWx0cylcbiAgfVxufVxuXG5mdW5jdGlvbiBkb25lIChlcnIpIHtcbiAgdGhpcy5zZXNzaW9uKytcbiAgdGhpcy5ydW5uaW5nID0gZmFsc2VcbiAgdGhpcy5lbWl0KCdlbmQnLCBlcnIpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js\n");

/***/ })

};
;