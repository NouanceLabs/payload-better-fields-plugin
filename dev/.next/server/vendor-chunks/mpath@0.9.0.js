/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mpath@0.9.0";
exports.ids = ["vendor-chunks/mpath@0.9.0"];
exports.modules = {

/***/ "(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/index.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nmodule.exports = exports = __webpack_require__(/*! ./lib */ \"(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/index.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21wYXRoQDAuOS4wL25vZGVfbW9kdWxlcy9tcGF0aC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiwyQkFBMkIsbUJBQU8sQ0FBQyxzRkFBTyIsInNvdXJjZXMiOlsiL2hvbWUvcGF1bC9wcm9qZWN0cy9wYXlsb2FkL3BsdWdpbi1kZXZlbG9wbWVudC9iZXR0ZXItZmllbGRzL2dpdHJvb3Qvbm9kZV9tb2R1bGVzLy5wbnBtL21wYXRoQDAuOS4wL25vZGVfbW9kdWxlcy9tcGF0aC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliJyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/index.js\n");

/***/ }),

/***/ "(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/index.js":
/*!*************************************************************************!*\
  !*** ../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* eslint strict:off */\n/* eslint no-var: off */\n/* eslint no-redeclare: off */\n\nvar stringToParts = __webpack_require__(/*! ./stringToParts */ \"(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/stringToParts.js\");\n\n// These properties are special and can open client libraries to security\n// issues\nvar ignoreProperties = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function(path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o,\n      part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      // Need to `concat()` to avoid `map()` calling a constructor of an array\n      // subclass\n      return [].concat(obj).map(function(item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _from = special && obj[special] ? obj[special] : obj;\n      obj = _from instanceof Map ?\n        _from.get(part) :\n        _from[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n};\n\n/**\n * Returns true if `in` returns true for every piece of the path\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.has = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n    }\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    cur = cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Deletes the last piece of `path`\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.unset = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Disallow any updates to __proto__ or special properties.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return false;\n    }\n    if (i === len - 1) {\n      delete cur[parts[i]];\n      return true;\n    }\n    cur = cur instanceof Map ? cur.get(parts[i]) : cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function(path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  for (var i = 0; i < parts.length; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Silently ignore any updates to `__proto__`, these are potentially\n    // dangerous if using mpath with unsanitized data.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return;\n    }\n  }\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array. Unless the user explicitly opted out by passing\n  // false, see Automattic/mongoose#6273\n  var copy = _copying || (/\\$/.test(path) && _copying !== false),\n      obj = o,\n      part;\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _to = special && obj[special] ? obj[special] : obj;\n      obj = _to instanceof Map ?\n        _to.get(part) :\n        _to[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      _setArray(obj, val, part, lookup, special, map);\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        var item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else if (obj instanceof Map) {\n      obj.set(part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n};\n\n/*!\n * Split a string path into components delimited by '.' or\n * '[\\d+]'\n *\n * #### Example:\n *     stringToParts('foo[0].bar.1'); // ['foo', '0', 'bar', '1']\n */\n\nexports.stringToParts = stringToParts;\n\n/*!\n * Recursively set nested arrays\n */\n\nfunction _setArray(obj, val, part, lookup, special, map) {\n  for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n    item = obj[j];\n    if (Array.isArray(item) && Array.isArray(val[j])) {\n      _setArray(item, val[j], part, lookup, special, map);\n    } else if (item) {\n      if (lookup) {\n        lookup(item, part, map(val[j]));\n      } else {\n        if (item[special]) item = item[special];\n        item[part] = map(val[j]);\n      }\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K(v) {\n  return v;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/index.js\n");

/***/ }),

/***/ "(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/stringToParts.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/stringToParts.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function stringToParts(str) {\n  const result = [];\n\n  let curPropertyName = '';\n  let state = 'DEFAULT';\n  for (let i = 0; i < str.length; ++i) {\n    // Fall back to treating as property name rather than bracket notation if\n    // square brackets contains something other than a number.\n    if (state === 'IN_SQUARE_BRACKETS' && !/\\d/.test(str[i]) && str[i] !== ']') {\n      state = 'DEFAULT';\n      curPropertyName = result[result.length - 1] + '[' + curPropertyName;\n      result.splice(result.length - 1, 1);\n    }\n\n    if (str[i] === '[') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'IN_SQUARE_BRACKETS';\n    } else if (str[i] === ']') {\n      if (state === 'IN_SQUARE_BRACKETS') {\n        state = 'IMMEDIATELY_AFTER_SQUARE_BRACKETS';\n        result.push(curPropertyName);\n        curPropertyName = '';\n      } else {\n        state = 'DEFAULT';\n        curPropertyName += str[i];\n      }\n    } else if (str[i] === '.') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'DEFAULT';\n    } else {\n      curPropertyName += str[i];\n    }\n  }\n\n  if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n    result.push(curPropertyName);\n  }\n\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21wYXRoQDAuOS4wL25vZGVfbW9kdWxlcy9tcGF0aC9saWIvc3RyaW5nVG9QYXJ0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3BhdWwvcHJvamVjdHMvcGF5bG9hZC9wbHVnaW4tZGV2ZWxvcG1lbnQvYmV0dGVyLWZpZWxkcy9naXRyb290L25vZGVfbW9kdWxlcy8ucG5wbS9tcGF0aEAwLjkuMC9ub2RlX21vZHVsZXMvbXBhdGgvbGliL3N0cmluZ1RvUGFydHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHN0cmluZ1RvUGFydHMoc3RyKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gIGxldCBjdXJQcm9wZXJ0eU5hbWUgPSAnJztcbiAgbGV0IHN0YXRlID0gJ0RFRkFVTFQnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIC8vIEZhbGwgYmFjayB0byB0cmVhdGluZyBhcyBwcm9wZXJ0eSBuYW1lIHJhdGhlciB0aGFuIGJyYWNrZXQgbm90YXRpb24gaWZcbiAgICAvLyBzcXVhcmUgYnJhY2tldHMgY29udGFpbnMgc29tZXRoaW5nIG90aGVyIHRoYW4gYSBudW1iZXIuXG4gICAgaWYgKHN0YXRlID09PSAnSU5fU1FVQVJFX0JSQUNLRVRTJyAmJiAhL1xcZC8udGVzdChzdHJbaV0pICYmIHN0cltpXSAhPT0gJ10nKSB7XG4gICAgICBzdGF0ZSA9ICdERUZBVUxUJztcbiAgICAgIGN1clByb3BlcnR5TmFtZSA9IHJlc3VsdFtyZXN1bHQubGVuZ3RoIC0gMV0gKyAnWycgKyBjdXJQcm9wZXJ0eU5hbWU7XG4gICAgICByZXN1bHQuc3BsaWNlKHJlc3VsdC5sZW5ndGggLSAxLCAxKTtcbiAgICB9XG5cbiAgICBpZiAoc3RyW2ldID09PSAnWycpIHtcbiAgICAgIGlmIChzdGF0ZSAhPT0gJ0lNTUVESUFURUxZX0FGVEVSX1NRVUFSRV9CUkFDS0VUUycpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goY3VyUHJvcGVydHlOYW1lKTtcbiAgICAgICAgY3VyUHJvcGVydHlOYW1lID0gJyc7XG4gICAgICB9XG4gICAgICBzdGF0ZSA9ICdJTl9TUVVBUkVfQlJBQ0tFVFMnO1xuICAgIH0gZWxzZSBpZiAoc3RyW2ldID09PSAnXScpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gJ0lOX1NRVUFSRV9CUkFDS0VUUycpIHtcbiAgICAgICAgc3RhdGUgPSAnSU1NRURJQVRFTFlfQUZURVJfU1FVQVJFX0JSQUNLRVRTJztcbiAgICAgICAgcmVzdWx0LnB1c2goY3VyUHJvcGVydHlOYW1lKTtcbiAgICAgICAgY3VyUHJvcGVydHlOYW1lID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGF0ZSA9ICdERUZBVUxUJztcbiAgICAgICAgY3VyUHJvcGVydHlOYW1lICs9IHN0cltpXTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHN0cltpXSA9PT0gJy4nKSB7XG4gICAgICBpZiAoc3RhdGUgIT09ICdJTU1FRElBVEVMWV9BRlRFUl9TUVVBUkVfQlJBQ0tFVFMnKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGN1clByb3BlcnR5TmFtZSk7XG4gICAgICAgIGN1clByb3BlcnR5TmFtZSA9ICcnO1xuICAgICAgfVxuICAgICAgc3RhdGUgPSAnREVGQVVMVCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1clByb3BlcnR5TmFtZSArPSBzdHJbaV07XG4gICAgfVxuICB9XG5cbiAgaWYgKHN0YXRlICE9PSAnSU1NRURJQVRFTFlfQUZURVJfU1FVQVJFX0JSQUNLRVRTJykge1xuICAgIHJlc3VsdC5wdXNoKGN1clByb3BlcnR5TmFtZSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/mpath@0.9.0/node_modules/mpath/lib/stringToParts.js\n");

/***/ })

};
;